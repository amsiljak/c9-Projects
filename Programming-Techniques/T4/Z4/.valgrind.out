==10225== Memcheck, a memory error detector
==10225== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10225== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==10225== Command: /rhome/a/asiljak1/workspace/TP/T4/Z4/.runme
==10225== Parent PID: 10160
==10225== 
==10225== 
==10225== Process terminating with default action of signal 1 (SIGHUP)
==10225==    at 0x56EF152: write (write.c:27)
==10225==    by 0x566A1BC: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1203)
==10225==    by 0x566BF50: new_do_write (fileops.c:457)
==10225==    by 0x566BF50: _IO_do_write@@GLIBC_2.2.5 (fileops.c:433)
==10225==    by 0x566C402: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:798)
==10225==    by 0x5151999: std::ostream::put(char) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==10225==    by 0x5151B9E: std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==10225==    by 0x109209: void UnosBroja<int>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int&) (main.cpp:14)
==10225==    by 0x108F9E: main (main.cpp:27)
==10225== 
==10225== HEAP SUMMARY:
==10225==     in use at exit: 69 bytes in 2 blocks
==10225==   total heap usage: 4 allocs, 2 frees, 73,797 bytes allocated
==10225== 
==10225== LEAK SUMMARY:
==10225==    definitely lost: 0 bytes in 0 blocks
==10225==    indirectly lost: 0 bytes in 0 blocks
==10225==      possibly lost: 0 bytes in 0 blocks
==10225==    still reachable: 69 bytes in 2 blocks
==10225==         suppressed: 0 bytes in 0 blocks
==10225== Reachable blocks (those to which a pointer was found) are not shown.
==10225== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==10225== 
==10225== For counts of detected and suppressed errors, rerun with: -v
==10225== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
